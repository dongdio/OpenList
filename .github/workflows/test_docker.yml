name: test_docker

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  ORG_NAME: openlistteam
  IMAGE_NAME: openlist-git
  IMAGE_NAME_DOCKERHUB: openlist
  REGISTRY: ghcr.io
  ARTIFACT_NAME: 'binaries_docker_release'
  RELEASE_PLATFORMS: 'linux/amd64,linux/arm64'
  IMAGE_PUSH: ${{ github.event_name == 'push' }}
  IMAGE_TAGS_BETA: |
    type=ref,event=pr
    type=raw,value=beta,enable={{is_default_branch}}

jobs:
  build_binary:
    name: Build Binaries for Docker Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Cache Musl
        id: cache-musl
        uses: actions/cache@v4
        with:
          path: build/musl-libs
          key: docker-musl-libs-v2

      - name: Download Musl Library
        if: steps.cache-musl.outputs.cache-hit != 'true'
        run: bash build.sh prepare docker-multiplatform

      - name: Build go binary (beta)
        id: build_docker_test
        run: |
          touch docker_test_build_log.txt

          bash build.sh beta docker-multiplatform | tee docker_test_build_log.txt

          if [ $? -ne 0 ]; then
            echo "::error::Docker test build failed. See log for details."
            exit 1
          fi

          echo "=== Docker test build output ==="
          find build -name "openlist*" -type f | sort

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          overwrite: true
          path: |
            build/
            !build/*.tgz
            !build/musl-libs/**
          retention-days: 2

      - name: Upload build logs
        uses: actions/upload-artifact@v4
        with:
          name: docker-test-build-logs
          path: docker_test_build_log.txt
          retention-days: 2

  release_docker:
    needs: build_binary
    name: Test Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        image: [ 'latest' ]
        include:
          - image: 'latest'
            build_arg: ''
            tag_favor: ''
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: 'build/'

      - name: Verify Docker build files
        run: |
          echo "=== Docker test build files ==="
          find build -type f | sort

          echo "=== Docker test executable files ==="
          find build -name "openlist*" -type f -executable | sort

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: env.IMAGE_PUSH == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub Container Registry
        if: env.IMAGE_PUSH == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ env.ORG_NAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}
            ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME_DOCKERHUB }}
          tags: ${{ env.IMAGE_TAGS_BETA }}
          flavor: |
            ${{ matrix.tag_favor }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.ci
          push: ${{ env.IMAGE_PUSH == 'true' }}
          build-args: ${{ matrix.build_arg }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ env.RELEASE_PLATFORMS }}

      - name: Test Docker image
        if: env.IMAGE_PUSH != 'true'
        run: |
          echo "=== Testing Docker image locally ==="
          docker build -t openlist-test -f Dockerfile.ci .

          docker run --rm openlist-test --version || true

          echo "Docker image test completed successfully"